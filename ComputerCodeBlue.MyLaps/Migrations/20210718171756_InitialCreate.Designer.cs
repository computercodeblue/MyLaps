// <auto-generated />
using System;
using ComputerCodeBlue.MyLaps;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerCodeBlue.MyLaps.Migrations
{
    [DbContext(typeof(MyLapsContext))]
    [Migration("20210718171756_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.ClassResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<int>("RunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RunId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.DriverResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BestLap")
                        .HasColumnType("longtext");

                    b.Property<string>("BestTime")
                        .HasColumnType("longtext");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Competitor")
                        .HasColumnType("longtext");

                    b.Property<string>("Diff")
                        .HasColumnType("longtext");

                    b.Property<string>("Laps")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<string>("RaceNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<string>("TopSpeed")
                        .HasColumnType("longtext");

                    b.Property<string>("TotalTime")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.EventWithRunsResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.GroupWithRunsResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.RunResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.ClassResult", b =>
                {
                    b.HasOne("ComputerCodeBlue.MyLaps.RunResult", "Run")
                        .WithMany("Classes")
                        .HasForeignKey("RunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Run");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.DriverResult", b =>
                {
                    b.HasOne("ComputerCodeBlue.MyLaps.ClassResult", "Class")
                        .WithMany("Results")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.GroupWithRunsResult", b =>
                {
                    b.HasOne("ComputerCodeBlue.MyLaps.EventWithRunsResult", "Event")
                        .WithMany("Groups")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.RunResult", b =>
                {
                    b.HasOne("ComputerCodeBlue.MyLaps.GroupWithRunsResult", "Group")
                        .WithMany("Runs")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.ClassResult", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.EventWithRunsResult", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.GroupWithRunsResult", b =>
                {
                    b.Navigation("Runs");
                });

            modelBuilder.Entity("ComputerCodeBlue.MyLaps.RunResult", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
